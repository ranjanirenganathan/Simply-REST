# Base this docker container off the official golang docker image.
# Docker containers inherit everything from their base.
FROM golang:1.9.1
# Create a directory inside the container to store all our application and then make it the working directory.
RUN mkdir -p /go/src/example-app
WORKDIR /go/src/example-app
# Copy the example-app directory (where the Dockerfile lives) into the container.
COPY . /go/src/example-app
# Download and install any required third party dependencies into the container.
RUN     go get github.com/tools/godep
RUN     go get github.com/gin-gonic/gin
RUN     go get gopkg.in/mgo.v2
RUN     go get gopkg.in/mgo.v2/bson
RUN     go get github.com/zebresel-com/mongodm
RUN     go install example-app
RUN go-wrapper download
RUN go-wrapper install

# Set the PORT environment variable inside the container
#ENV PORT 80
ENTRYPOINT /go/bin/example-app

# Expose port 8080 to the host so we can access our application
EXPOSE 8080

CMD ["go-wrapper", "run"]